@using System.ComponentModel.DataAnnotations

@inject HttpClient HttpClient

<EditForm Model="@Model">
        <DataAnnotationsValidator />
        <MudCard>
            <MudCardHeader>
                <MudText Typo=Typo.h5>@ActionText Restaurant</MudText>
            </MudCardHeader>
            <MudCardContent>
                <MudTextField Label="Id" @bind-Value="Model.Id" ReadOnly=true />
                <MudTextField Label="Name" @bind-Value="Model.Name" Class="mt-3" For="@(() => Model.Name)"/>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" OnClick=@(() => Submit(context)) Class="ml-auto">
                            @ActionText
                </MudButton>
            </MudCardActions>
        </MudCard>
    </EditForm>
@code {

    [Parameter] public Action<Restaurant>? AddToTable { get; set; }
    [Parameter] public Restaurant Model
    {
        get { return model; }
        set
        {
            model = value;
            ActionText = model.Id == null ? "Create" : "Edit";
        }
    }

    private string ActionText = "Create";
    private Restaurant model = new();

    private async Task Submit(EditContext context)
    {
        if (Model.Id == null)
        {
            await HttpClient.PostAsJsonAsync($"http://localhost:5101/api/restaurant", Model);
            AddToTable?.Invoke(Model);
        }
        else
        {
            await HttpClient.PutAsJsonAsync($"http://localhost:5101/api/restaurant", Model);
        }

        Model = new();
    }

}